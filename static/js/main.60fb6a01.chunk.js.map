{"version":3,"sources":["views/MainChart/components/BarChart.js","views/MainChart/chartHelpers.js","views/MainChart/components/LineChart.js","views/MainChart/styles.js","context/carsApi/carsApiContext.js","context/ui/UIContext.js","views/MainChart/components/UIs/UIRadioButton.js","views/MainChart/components/UIs/UIRadioButtonGridType.js","views/MainChart/components/UIs/UIRadioGroup.js","views/MainChart/components/UIs/UICheckbox.js","views/MainChart/components/UIs/UISelect.js","views/MainChart/dataHelpers.js","views/MainChart/components/ControlPanel.js","views/MainChart/components/AdditionalCharts.js","views/MainChart/components/tables/AgGrid.js","views/MainChart/components/tables/ReactTableComponent.js","views/MainChart/components/tables/AntdTable.js","views/MainChart/components/tables/index.js","views/MainChart/index.js","views/MainChartBlock/index.js","views/RootApp/UIs/AntdSider.js","views/RootApp/UIs/SemanticSidebar.js","views/RootApp/UIs/MaterialDrawer.js","views/RootApp/UIs/AtlassianKitDrawer.js","views/RootApp/UIs/UISider.js","views/RootApp/index.js","context/carsApi/carsApiReducer.js","context/carsApi/actionTypes.js","context/carsApi/carsApiState.js","context/ui/uiReducer.js","context/ui/actionTypes.js","context/ui/uiState.js","App.js","serviceWorker.js","index.js"],"names":["memo","data","options","selectBrand","onElementsClick","chartElement","label","_model","defaultChartDataset","color","borderColor","pointBackgroundColor","backgroundColor","defaultChartOptions","animation","easing","onResize","maintainAspectRatio","responsive","chartColors","getBarChartScales","kpiPrimary","kpiAdditional","showAdditional","removeY","yAxes","id","position","fontStyle","fontColor","ticks","display","scaleLabel","fontSize","labelString","toUpperCase","push","xAxes","gridLines","getLineChartScales","ControlPanelWrapper","styled","div","CarsApiContext","createContext","UIContext","RadioButton","Radio","Button","RadioGroup","Group","value","onChange","uiName","clickHandler","key","e","target","BarChartOutlined","LineChartOutlined","BorderlessTableOutlined","size","onClick","active","name","Or","ButtonGroup","variant","aria-label","startIcon","appearance","iconBefore","isSelected","AntdRadioGroup","AntdRadio","akRadioOptions","changeHandler","checked","_","val","FormControlLabel","control","currentTarget","isChecked","yearsOptions","ui","map","text","prepareDDOptions","placeholder","search","selection","className","option","MenuItem","find","el","setBlockMode","blockMode","chartSettings","setCharsSettings","tableType","setTableType","carsApiState","useContext","state","obj","cars","sales","Object","keys","year","reverse","getYearsOptions","setSetting","setting","console","log","changes","yearPrimary","brand","useState","chartData","setChartData","useEffect","labels","line","bar","pie","currentBrand","shares","revenue","forEach","lineData","datasets","fill","barData","pieData","lineOptions","legend","scales","title","barOptions","pieOptions","fetchAdditionalChartData","sm","md","tableData","debounce","params","api","sizeColumnsToFit","style","height","width","columnDefs","rowData","defaultColDef","sortable","resizable","rowSelection","onSelectionChanged","getSelectedRows","onGridReady","onGridSizeChanged","Table","columns","onRowClick","useTable","useSortBy","getTableProps","getTableBodyProps","headerGroups","rows","prepareRow","firstPageRows","slice","headerGroup","getHeaderGroupProps","headers","column","getHeaderProps","getSortByToggleProps","render","isSorted","isSortedDesc","row","getRowProps","cells","cell","getCellProps","Styles","showPagination","showPageSizeOptions","values","dataSource","selectedBrand","tableLayout","bordered","pagination","onSelect","type","selectedRowKeys","headerName","field","company","index","concat","targetKpi","newRow","Header","accessor","dataIndex","colindex","prepareTable","initialChartSettings","MainChart","defaultBrand","additionalBrand","setAdditionalBrand","yAxisID","barChartOptions","barChartData","fetchBarChartData","lineChartOptions","lineChartData","fetchLineChartData","controlPanelProps","cursor","MainChartBlock","getCarsData","getData","useCallback","Sider","Layout","AntdSider","collapsed","setCollapsed","children","setUI","minHeight","collapsible","onCollapse","theme","mode","selectedKeys","Item","icon","alt","src","publicImageFolder","SemanticSidebar","Sidebar","Pushable","as","Segment","Menu","inverted","vertical","visible","direction","Pusher","Icon","basic","useStyles","makeStyles","root","appBar","zIndex","drawer","transition","transitions","create","sharp","duration","leavingScreen","appBarShift","marginLeft","enteringScreen","menuButton","marginRight","hide","flexShrink","whiteSpace","drawerOpen","drawerClose","overflowX","spacing","breakpoints","up","toolbar","alignItems","justifyContent","padding","mixins","content","flexGrow","MaterialDrawer","classes","useTheme","CssBaseline","AppBar","clsx","Toolbar","IconButton","edge","Typography","noWrap","Drawer","paper","Divider","List","ListItem","button","selected","ListItemIcon","ListItemText","primary","AtlassianKitDrawer","css","onClose","isOpen","colors","N800","border","N40","boxShadow","borderRadius","maxWidth","margin","UISider","props","antdSider","RootApp","handlers","action","payload","loading","carsApiReducer","DEFAULT","CarsApiState","useReducer","dispatch","a","setLoading","axios","get","response","error","Provider","uiReducer","UIState","App","Boolean","window","location","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.60fb6a01.chunk.js","sourcesContent":["import React, { memo } from \"react\";\nimport { Bar } from \"react-chartjs-2\";\n\nconst BarChart = ({ data, options, selectBrand }) => {\n  const chartClick = chartElement => {\n    if (chartElement[0]) {\n      const {\n        _model: { label }\n      } = chartElement[0];\n      selectBrand(label);\n    }\n  };\n\n  return <Bar options={options} data={data} onElementsClick={chartClick} />;\n};\n\nexport default memo(BarChart);\n","const defaultChartDataset = color => ({\n  borderColor: color,\n  pointBackgroundColor: \"#fff\",\n  backgroundColor: color,\n  data: []\n});\n\nconst defaultChartOptions = {\n  backgroundColor: \"blue\",\n  animation: { easing: \"easeOutQuad\" },\n  onResize: null,\n  maintainAspectRatio: false,\n  responsive: true\n};\n\nconst chartColors = [\n  \"#FF645D\",\n  \"#FFD35B\",\n  \"#71D34D\",\n  \"#00B4C6\",\n  \"#2370EF\",\n  \"#AE43BA\"\n];\n\nconst primaryColor = \"#2370EF\";\nconst secondaryColor = \"#AE43BA\";\n\nexport const fetchBarChartData = ({\n  data,\n  yearPrimary,\n  kpiPrimary,\n  kpiAdditional,\n  showAdditional\n}) => {\n  const labels = [];\n  const datasets = [\n    {\n      ...defaultChartDataset(primaryColor),\n      label: kpiPrimary.toUpperCase(),\n      yAxisID: kpiPrimary\n    }\n  ];\n  if (showAdditional)\n    datasets.push({\n      ...defaultChartDataset(secondaryColor),\n      label: kpiAdditional.toUpperCase(),\n      yAxisID: kpiAdditional\n    });\n  data.forEach(company => {\n    labels.push(company.brand);\n    datasets[0].data.push(company[kpiPrimary][yearPrimary]);\n    if (showAdditional) {\n      datasets[1].data.push(company[kpiAdditional][yearPrimary]);\n    }\n  });\n\n  const scales = getBarChartScales({\n    kpiPrimary,\n    kpiAdditional,\n    showAdditional\n  });\n\n  const barChartOptions = {\n    ...defaultChartOptions,\n    scales,\n    title: {\n      display: true,\n      position: \"top\",\n      text: yearPrimary,\n      fontSize: 18\n    }\n  };\n  return { barChartOptions, barChartData: { labels, datasets } };\n};\n\nconst getBarChartScales = ({\n  kpiPrimary,\n  kpiAdditional,\n  showAdditional,\n  removeY\n}) => {\n  const xAxes = [{ gridLines: { display: false } }];\n  const yAxes = [\n    {\n      id: kpiPrimary,\n      position: \"left\",\n      fontStyle: \"bold\",\n      fontColor: primaryColor,\n      ticks: {\n        fontColor: primaryColor,\n        display: !removeY\n      },\n      scaleLabel: {\n        display: !removeY,\n        fontColor: primaryColor,\n        fontSize: 14,\n        fontStyle: \"bold\",\n        labelString: kpiPrimary.toUpperCase()\n      }\n    }\n  ];\n  if (showAdditional)\n    yAxes.push({\n      id: kpiAdditional,\n      position: \"right\",\n      fontStyle: \"bold\",\n      fontColor: secondaryColor,\n      ticks: {\n        fontColor: secondaryColor,\n        display: !removeY\n      },\n      scaleLabel: {\n        display: !removeY,\n        fontColor: secondaryColor,\n        fontSize: 14,\n        fontStyle: \"bold\",\n        labelString: kpiAdditional.toUpperCase()\n      }\n    });\n  return { xAxes, yAxes };\n};\n\nexport const fetchLineChartData = ({ data, kpiPrimary }) => {\n  let labels;\n\n  const datasets = [];\n\n  data.forEach((company, index) => {\n    const { brand } = company;\n    if (!index) labels = Object.keys(company.sales);\n    datasets.push({\n      ...defaultChartDataset(chartColors[index]),\n      fill: false,\n      label: brand,\n      data: Object.values(company[kpiPrimary])\n    });\n  });\n\n  const scales = getLineChartScales({\n    kpiPrimary\n  });\n\n  const lineChartOptions = { ...defaultChartOptions, scales };\n  return { lineChartOptions, lineChartData: { labels, datasets } };\n};\n\nconst getLineChartScales = ({ kpiPrimary, removeY }) => {\n  const xAxes = [{ gridLines: { display: false } }];\n  const yAxes = [\n    {\n      id: kpiPrimary,\n      position: \"left\",\n      fontStyle: \"bold\",\n      fontColor: primaryColor,\n      ticks: {\n        fontColor: primaryColor,\n        display: !removeY\n      },\n      scaleLabel: {\n        display: !removeY,\n        fontColor: primaryColor,\n        fontSize: 14,\n        fontStyle: \"bold\",\n        labelString: kpiPrimary.toUpperCase()\n      }\n    }\n  ];\n\n  return { xAxes, yAxes };\n};\n\nexport const getYearsOptions = state => {\n  // eslint-disable-next-line\n  const obj = state?.cars?.[0]?.sales ?? {};\n  return Object.keys(obj)\n    .map(year => ({ label: year, value: year }))\n    .reverse();\n};\n\nexport const fetchAdditionalChartData = ({ data, year, brand }) => {\n  const labels = [];\n  const line = [];\n  const bar = [];\n  const pie = [];\n  const currentBrand = data.find(el => el.brand === brand);\n  if (currentBrand) {\n    const { sales, shares, revenue } = currentBrand;\n    Object.keys(currentBrand.sales).forEach(key => {\n      labels.push(key);\n      line.push(sales[key]);\n      bar.push(revenue[key]);\n    });\n    pie.push(shares[year]);\n    pie.push(100 - shares[year]);\n  }\n  const lineData = {\n    labels,\n    datasets: [\n      {\n        ...defaultChartDataset(primaryColor),\n        data: line,\n        label: brand,\n        fill: false\n      }\n    ]\n  };\n  const barData = {\n    labels,\n    datasets: [\n      {\n        ...defaultChartDataset(secondaryColor),\n        data: bar,\n        label: brand\n      }\n    ]\n  };\n  const pieData = {\n    labels: [brand, \"Others\"],\n    datasets: [\n      {\n        data: [...pie],\n        backgroundColor: [chartColors[0], chartColors[1]]\n        // label: brand\n      }\n    ]\n  };\n  const lineOptions = {\n    ...defaultChartOptions,\n    legend: { display: false },\n    scales: getLineChartScales({ kpiPrimary: \"sales\", removeY: true }),\n    title: {\n      display: true,\n      position: \"top\",\n      text: `${brand} sales history`,\n      fontSize: 15\n    }\n  };\n  const barOptions = {\n    ...defaultChartOptions,\n    legend: { display: false },\n    scales: getBarChartScales({ kpiPrimary: \"revenue\", removeY: true }),\n    title: {\n      display: true,\n      position: \"top\",\n      text: `${brand} sales revenue`,\n      fontSize: 15\n    }\n  };\n  const pieOptions = {\n    legend: { display: false },\n    title: {\n      display: true,\n      position: \"top\",\n      text: `${brand} ${year} market share`,\n      fontSize: 15\n    },\n    animation: { easing: \"easeOutQuad\" },\n    onResize: null,\n    maintainAspectRatio: false,\n    responsive: true\n  };\n\n  return { lineData, barData, pieData, lineOptions, barOptions, pieOptions };\n};\n","import React, { memo } from \"react\";\nimport { Line } from \"react-chartjs-2\";\n\nconst LineChart = ({ data, options }) => {\n  return <Line options={options} data={data} />;\n};\n\nexport default memo(LineChart);\n","import styled from \"styled-components\";\n\nconst ControlPanelWrapper = styled.div`\n  height: 60px;\n  width: 100%;\n  margin: 20px 0;\n  border-radius: 10px;\n  background-color: #fff;\n  padding: 10px;\n  display: flex;\n  align-items: center;\n  border: 1px solid silver;\n  > div {\n    margin-right: 15px;\n  }\n\n  .ant-radio-wrapper {\n    display: block;\n  }\n\n  .antd-grid-container {\n    overflow: auto;\n  }\n\n  .controlUnit {\n    margin-right: 15px;\n    .ant-radio-button-wrapper {\n      .anticon {\n        vertical-align: 0;\n        font-size: 18px;\n        margin-right: 5px;\n      }\n    }\n    .ui.button > .icon {\n      color: #fff;\n      font-size: 16px;\n      margin-right: 4px;\n    }\n    .MuiRadio-root {\n      padding: 4px;\n    }\n    .MuiFormControlLabel-root {\n      margin-bottom: 0px;\n    }\n    > label {\n      margin-bottom: 0px;\n    }\n    .ui.radio.checkbox {\n      margin-top: 7px;\n    }\n    .ak-select,\n    .ant-select,\n    .ui.search.dropdown {\n      width: 100px;\n      min-width: 100px;\n    }\n    .MuiSelect-select {\n      width: 70px;\n    }\n  }\n`;\n\nexport { ControlPanelWrapper };\n","import { createContext } from \"react\";\n\nexport const CarsApiContext = createContext();\n","import { createContext } from \"react\";\n\nexport const UIContext = createContext();\n","import React, { memo } from \"react\";\nimport { Radio } from \"antd\";\nimport {\n  BarChartOutlined,\n  LineChartOutlined,\n  BorderlessTableOutlined\n} from \"@ant-design/icons\";\nimport TimelineOutlinedIcon from \"@material-ui/icons/TimelineOutlined\";\nimport EqualizerOutlinedIcon from \"@material-ui/icons/EqualizerOutlined\";\nimport TableChartOutlinedIcon from \"@material-ui/icons/TableChartOutlined\";\nimport { Button, Icon as SuiIcon } from \"semantic-ui-react\";\nimport { ButtonGroup, Button as MuiButton } from \"@material-ui/core\";\nimport AkButton, { ButtonGroup as AkButtonGroup } from \"@atlaskit/button\";\nimport GraphBarIcon from \"@atlaskit/icon/glyph/graph-bar\";\nimport GraphLineIcon from \"@atlaskit/icon/glyph/graph-line\";\nimport TableIcon from \"@atlaskit/icon/glyph/table\";\n\nconst RadioButton = Radio.Button;\nconst RadioGroup = Radio.Group;\n\nconst UIRadioButton = ({ value, onChange, uiName }) => {\n  const clickHandler = key => onChange(key);\n\n  switch (uiName) {\n    case \"antd\":\n      return (\n        <RadioGroup value={value} onChange={e => clickHandler(e.target.value)}>\n          <RadioButton value=\"bar\">\n            <BarChartOutlined />\n            Bar\n          </RadioButton>\n          <RadioButton value=\"line\">\n            <LineChartOutlined />\n            Line\n          </RadioButton>\n          <RadioButton value=\"table\">\n            <BorderlessTableOutlined />\n            Table\n          </RadioButton>\n        </RadioGroup>\n      );\n    case \"semantic\":\n      return (\n        <Button.Group color=\"blue\" value={value} size=\"small\">\n          <Button onClick={() => clickHandler(\"bar\")} active={value === \"bar\"}>\n            <SuiIcon name=\"chart bar\" />\n            Bar\n          </Button>\n          <Button.Or />\n          <Button\n            onClick={() => clickHandler(\"line\")}\n            active={value === \"line\"}\n          >\n            <SuiIcon name=\"chart line\" />\n            Line\n          </Button>\n          <Button.Or />\n          <Button\n            onClick={() => clickHandler(\"table\")}\n            active={value === \"table\"}\n          >\n            <SuiIcon name=\"table\" />\n            Table\n          </Button>\n        </Button.Group>\n      );\n    case \"material\":\n      return (\n        <ButtonGroup\n          variant=\"contained\"\n          color=\"primary\"\n          aria-label=\"contained primary button group\"\n          value={value}\n        >\n          <MuiButton\n            startIcon={<EqualizerOutlinedIcon />}\n            onClick={() => clickHandler(\"bar\")}\n          >\n            Bar\n          </MuiButton>\n          <MuiButton\n            startIcon={<TimelineOutlinedIcon />}\n            onClick={() => clickHandler(\"line\")}\n          >\n            Line\n          </MuiButton>\n          <MuiButton\n            startIcon={<TableChartOutlinedIcon />}\n            onClick={() => clickHandler(\"table\")}\n          >\n            Table\n          </MuiButton>\n        </ButtonGroup>\n      );\n    case \"atlassian\":\n      return (\n        <AkButtonGroup appearance=\"primary\">\n          <AkButton\n            onClick={() => clickHandler(\"bar\")}\n            iconBefore={<GraphBarIcon />}\n            isSelected={value === \"bar\"}\n          >\n            Bar\n          </AkButton>\n          <AkButton\n            onClick={() => clickHandler(\"line\")}\n            iconBefore={<GraphLineIcon />}\n            isSelected={value === \"line\"}\n          >\n            Line\n          </AkButton>\n          <AkButton\n            onClick={() => clickHandler(\"table\")}\n            iconBefore={<TableIcon />}\n            isSelected={value === \"table\"}\n          >\n            Table\n          </AkButton>\n        </AkButtonGroup>\n      );\n    default:\n      return null;\n  }\n};\n\nexport default memo(UIRadioButton);\n","import React, { memo } from \"react\";\nimport { Radio } from \"antd\";\nimport { Button } from \"semantic-ui-react\";\nimport { ButtonGroup, Button as MuiButton } from \"@material-ui/core\";\nimport AkButton, { ButtonGroup as AkButtonGroup } from \"@atlaskit/button\";\n\nconst RadioButton = Radio.Button;\nconst RadioGroup = Radio.Group;\n\nconst UIRadioButtonGridType = ({ value, onChange, uiName }) => {\n  const clickHandler = key => onChange(key);\n  switch (uiName) {\n    case \"antd\":\n      return (\n        <RadioGroup value={value} onChange={e => clickHandler(e.target.value)}>\n          <RadioButton value=\"ag\">ag-Grid</RadioButton>\n          <RadioButton value=\"reacttable\">React-Table</RadioButton>\n          <RadioButton value=\"table\">Ant Design Grid</RadioButton>\n        </RadioGroup>\n      );\n    case \"semantic\":\n      return (\n        <Button.Group color=\"blue\" value={value} size=\"small\">\n          <Button onClick={() => clickHandler(\"ag\")} active={value === \"ag\"}>\n            ag-Grid\n          </Button>\n          <Button.Or />\n          <Button\n            onClick={() => clickHandler(\"reacttable\")}\n            active={value === \"reacttable\"}\n          >\n            React-Table\n          </Button>\n          <Button.Or />\n          <Button\n            onClick={() => clickHandler(\"antd\")}\n            active={value === \"antd\"}\n          >\n            Ant Design Grid\n          </Button>\n        </Button.Group>\n      );\n    case \"material\":\n      return (\n        <ButtonGroup\n          variant=\"contained\"\n          color=\"primary\"\n          aria-label=\"contained primary button group\"\n          value={value}\n        >\n          <MuiButton onClick={() => clickHandler(\"ag\")}>ag-Grid</MuiButton>\n          <MuiButton onClick={() => clickHandler(\"reacttable\")}>\n            React-Table\n          </MuiButton>\n          <MuiButton onClick={() => clickHandler(\"antd\")}>\n            Ant Design Grid\n          </MuiButton>\n        </ButtonGroup>\n      );\n    case \"atlassian\":\n      return (\n        <AkButtonGroup appearance=\"primary\">\n          <AkButton\n            onClick={() => clickHandler(\"ag\")}\n            isSelected={value === \"ag\"}\n          >\n            ag-Grid\n          </AkButton>\n          <AkButton\n            onClick={() => clickHandler(\"reacttable\")}\n            isSelected={value === \"reacttable\"}\n          >\n            React-Table\n          </AkButton>\n          <AkButton\n            onClick={() => clickHandler(\"antd\")}\n            isSelected={value === \"antd\"}\n          >\n            Ant Design Grid\n          </AkButton>\n        </AkButtonGroup>\n      );\n    default:\n      return null;\n  }\n};\n\nexport default memo(UIRadioButtonGridType);\n","import React, { memo } from \"react\";\nimport { Radio as AntdRadio } from \"antd\";\nimport { Radio as SuiRadio } from \"semantic-ui-react\";\nimport MuiRadio from \"@material-ui/core/Radio\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport { RadioGroup as AkRadioGroup } from \"@atlaskit/radio\";\n\nconst AntdRadioGroup = AntdRadio.Group;\nconst akRadioOptions = [\n  { name: \"color2\", value: \"sales\", label: \"Sales\" },\n  { name: \"color2\", value: \"revenue\", label: \"Revenue\" }\n];\nconst UIRadioGroup = ({ value, onChange, uiName }) => {\n  const changeHandler = key => onChange(key);\n\n  switch (uiName) {\n    case \"antd\":\n      return (\n        <AntdRadioGroup\n          onChange={e => changeHandler(e.target.value)}\n          value={value}\n        >\n          <AntdRadio value=\"sales\">Sales</AntdRadio>\n          <AntdRadio value=\"revenue\">Revenue</AntdRadio>\n        </AntdRadioGroup>\n      );\n    case \"semantic\":\n      return (\n        <>\n          <div>\n            <SuiRadio\n              label=\"Sales\"\n              name=\"radioGroup\"\n              value=\"sales\"\n              checked={value === \"sales\"}\n              onChange={(_, val) => changeHandler(val.value)}\n            />\n          </div>\n          <div>\n            <SuiRadio\n              label=\"Revenue\"\n              name=\"radioGroup\"\n              value=\"revenue\"\n              checked={value === \"revenue\"}\n              onChange={(_, val) => changeHandler(val.value)}\n            />\n          </div>\n        </>\n      );\n    case \"material\":\n      return (\n        <>\n          <div>\n            <FormControlLabel\n              control={\n                <MuiRadio\n                  label=\"Sales\"\n                  name=\"radioGroup1\"\n                  value=\"sales\"\n                  checked={value === \"sales\"}\n                  onChange={e => changeHandler(e.target.value)}\n                />\n              }\n              label=\"Sales\"\n            />\n          </div>\n          <div>\n            <FormControlLabel\n              control={\n                <MuiRadio\n                  label=\"Revenue\"\n                  name=\"radioGroup1\"\n                  value=\"revenue\"\n                  checked={value === \"revenue\"}\n                  onChange={e => changeHandler(e.target.value)}\n                />\n              }\n              label=\"Revenue\"\n            />\n          </div>\n        </>\n      );\n    case \"atlassian\":\n      return (\n        <AkRadioGroup\n          value={value}\n          options={akRadioOptions}\n          onChange={e => changeHandler(e.currentTarget.value)}\n        />\n      );\n    default:\n      return null;\n  }\n};\n\nexport default memo(UIRadioGroup);\n","import React, { memo } from \"react\";\nimport { Checkbox as AntdCheckbox } from \"antd\";\nimport { Checkbox as SuiCheckbox } from \"semantic-ui-react\";\nimport MuiCheckbox from \"@material-ui/core/Checkbox\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport { Checkbox as AkCheckbox } from \"@atlaskit/checkbox\";\n\nconst UICheckbox = ({ checked, onChange, uiName }) => {\n  const changeHandler = key => onChange(key);\n  const label = \"Additional KPI\";\n  switch (uiName) {\n    case \"antd\":\n      return (\n        <AntdCheckbox\n          checked={checked}\n          onChange={e => changeHandler(e.target.checked)}\n        >\n          {label}\n        </AntdCheckbox>\n      );\n    case \"semantic\":\n      return (\n        <SuiCheckbox\n          label={label}\n          checked={checked}\n          onChange={(_, e) => changeHandler(e.checked)}\n        />\n      );\n    case \"material\":\n      return (\n        <FormControlLabel\n          control={\n            <MuiCheckbox\n              checked={checked}\n              onChange={e => changeHandler(e.target.checked)}\n            />\n          }\n          label={label}\n        />\n      );\n    case \"atlassian\":\n      return (\n        <AkCheckbox\n          isChecked={checked}\n          onChange={e => changeHandler(e.target.checked)}\n          label={label}\n        />\n      );\n    default:\n      return null;\n  }\n};\n\nexport default memo(UICheckbox);\n","import React, { memo } from \"react\";\nimport { Select as AntdSelect } from \"antd\";\nimport { Dropdown as SuiDropdown } from \"semantic-ui-react\";\nimport { prepareDDOptions } from \"../../dataHelpers\";\nimport MuiSelect from \"@material-ui/core/Select\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport AkSelect from \"@atlaskit/select\";\n\nconst UISelect = ({ value, yearsOptions, onChange, uiName }) => {\n  const changeHandler = key => onChange(key);\n  const options = prepareDDOptions(yearsOptions, uiName);\n  switch (uiName) {\n    case \"antd\":\n      return (\n        <AntdSelect onChange={changeHandler} options={options} value={value} />\n      );\n\n    case \"semantic\":\n      return (\n        <SuiDropdown\n          placeholder=\"State\"\n          search\n          selection\n          value={value}\n          options={options}\n          onChange={(_, val) => changeHandler(val.value)}\n        />\n      );\n\n    case \"material\":\n      return (\n        <MuiSelect\n          value={value}\n          onChange={e => changeHandler(e.target.value)}\n          className=\"mui-select\"\n        >\n          {options.map(option => (\n            <MenuItem key={option.value} value={option.value}>\n              {option.value}\n            </MenuItem>\n          ))}\n        </MuiSelect>\n      );\n\n    case \"atlassian\":\n      return (\n        <AkSelect\n          className=\"ak-select\"\n          options={options}\n          value={options.find(el => el.value === value)}\n          onChange={e => changeHandler(e.value)}\n        />\n      );\n    default:\n      return null;\n  }\n};\n\nexport default memo(UISelect);\n","export const prepareTable = (data, tableType, kpiPrimary) => {\n  if (tableType === \"ag\") {\n    let columnDefs = [{ headerName: \"Brand\", field: \"brand\" }];\n    const rowData = [];\n    data.forEach((company, index) => {\n      if (!index) {\n        columnDefs = columnDefs.concat(\n          Object.keys(company.sales).map(year => ({\n            headerName: year,\n            field: year\n          }))\n        );\n      }\n      const targetKpi = company[kpiPrimary];\n      const newRow = { brand: company.brand };\n\n      Object.keys(targetKpi).forEach(year => (newRow[year] = targetKpi[year]));\n      rowData.push(newRow);\n    });\n    return { columnDefs, rowData };\n  } else if (tableType === \"reacttable\") {\n    let columns = [{ sortable: true, Header: \"Brand\", accessor: \"brand\" }];\n    const rowData = [];\n    data.forEach((company, index) => {\n      if (!index) {\n        columns = columns.concat(\n          Object.keys(company.sales).map(year => ({\n            sortable: true,\n            Header: year,\n            accessor: year\n          }))\n        );\n      }\n      const targetKpi = company[kpiPrimary];\n      const newRow = { brand: company.brand };\n\n      Object.keys(targetKpi).forEach(year => (newRow[year] = targetKpi[year]));\n      rowData.push(newRow);\n    });\n    return { columns, data: rowData };\n  } else {\n    let columns = [{ title: \"Brand\", dataIndex: \"brand\", key: \"001\" }];\n    const dataSource = [];\n    data.forEach((company, index) => {\n      if (!index) {\n        columns = columns.concat(\n          Object.keys(company.sales).map((year, colindex) => ({\n            title: year,\n            dataIndex: year,\n            key: year + colindex\n          }))\n        );\n      }\n      const targetKpi = company[kpiPrimary];\n      const newRow = { brand: company.brand };\n\n      Object.keys(targetKpi).forEach(year => (newRow[year] = targetKpi[year]));\n      newRow.key = company.brand;\n      dataSource.push(newRow);\n    });\n    return { columns, dataSource };\n  }\n};\n\nexport const prepareDDOptions = (options, ui) => {\n  switch (ui) {\n    case \"antd\":\n      return options;\n    case \"material\":\n      return options;\n    case \"semantic\":\n      return options.map(({ value }) => ({ key: value, value, text: value }));\n    case \"atlassian\":\n      return options;\n    default:\n      return options;\n  }\n};\n","import React, { memo, useContext } from \"react\";\nimport { ControlPanelWrapper } from \"../styles\";\nimport { CarsApiContext } from \"../../../context/carsApi/carsApiContext\";\nimport { UIContext } from \"../../../context/ui/UIContext\";\nimport { getYearsOptions } from \"../chartHelpers\";\nimport UIRadioButton from \"./UIs/UIRadioButton\";\nimport UIRadioButtonGridType from \"./UIs/UIRadioButtonGridType\";\nimport UIRadioGroup from \"../components/UIs/UIRadioGroup\";\nimport UICheckbox from \"../components/UIs/UICheckbox\";\nimport UISelect from \"../components/UIs/UISelect\";\n// import antdLogo from \"/antdLogo.png\"; //\n\nconst ControlPanel = ({\n  setBlockMode,\n  blockMode,\n  chartSettings,\n  setCharsSettings,\n  tableType,\n  setTableType\n}) => {\n  const { carsApiState } = useContext(CarsApiContext);\n  const { uiName } = useContext(UIContext);\n  const yearsOptions = getYearsOptions(carsApiState);\n  const setSetting = (setting, value) => {\n    console.log(\"value: \", value);\n    const changes = { [setting]: value };\n    if (setting === \"kpiPrimary\") {\n      changes.kpiAdditional = value === \"sales\" ? \"revenue\" : \"sales\";\n    }\n    if (setting === \"kpiAdditional\") {\n      changes.kpiPrimary = value === \"sales\" ? \"revenue\" : \"sales\";\n    }\n    setCharsSettings({ ...chartSettings, ...changes });\n  };\n\n  const { yearPrimary, kpiPrimary, showAdditional } = chartSettings;\n\n  return (\n    <ControlPanelWrapper>\n      <div className=\"controlUnit\">\n        <UIRadioButton\n          value={blockMode}\n          onChange={setBlockMode}\n          uiName={uiName}\n        />\n      </div>\n\n      {/* {blockMode === \"bar\" && ( */}\n      <div className=\"controlUnit\">\n        <UISelect\n          yearsOptions={yearsOptions}\n          onChange={year => setSetting(\"yearPrimary\", year)}\n          value={yearPrimary}\n          uiName={uiName}\n        />\n      </div>\n      {/* )} */}\n      <div className=\"controlUnit\">\n        <UIRadioGroup\n          value={kpiPrimary}\n          onChange={key => setSetting(\"kpiPrimary\", key)}\n          uiName={uiName}\n        />\n      </div>\n      {blockMode === \"bar\" && (\n        <div className=\"controlUnit\">\n          <UICheckbox\n            checked={showAdditional}\n            onChange={key => setSetting(\"showAdditional\", key)}\n            uiName={uiName}\n          />\n        </div>\n      )}\n      {blockMode === \"table\" && (\n        <div className=\"controlUnit\">\n          <UIRadioButtonGridType\n            value={tableType}\n            onChange={setTableType}\n            uiName={uiName}\n          />\n        </div>\n      )}\n    </ControlPanelWrapper>\n  );\n};\n\nexport default memo(ControlPanel);\n","import React, { useState, useEffect, memo, useContext } from \"react\";\nimport { fetchAdditionalChartData } from \"../chartHelpers\";\nimport { Row, Col } from \"antd\";\nimport { CarsApiContext } from \"../../../context/carsApi/carsApiContext\";\nimport { Bar, Line, Doughnut } from \"react-chartjs-2\";\n\nconst AdditionalCharts = ({ brand, yearPrimary }) => {\n  const {\n    carsApiState: { cars }\n  } = useContext(CarsApiContext);\n  const [chartData, setChartData] = useState(null);\n  useEffect(() => {\n    const {\n      barData,\n      barOptions,\n      lineData,\n      lineOptions,\n      pieData,\n      pieOptions\n    } = fetchAdditionalChartData({\n      data: cars,\n      year: yearPrimary,\n      brand\n    });\n    setChartData({\n      barData,\n      barOptions,\n      lineData,\n      lineOptions,\n      pieData,\n      pieOptions\n    });\n  }, [brand, yearPrimary]);\n  if (!chartData) return null;\n  const {\n    barData,\n    barOptions,\n    lineData,\n    lineOptions,\n    pieData,\n    pieOptions\n  } = chartData;\n  return (\n    <Row className=\"additional-charts-row\">\n      <Col sm={24} md={8}>\n        <Line options={lineOptions} data={lineData} />\n      </Col>\n      <Col sm={24} md={8}>\n        <Bar options={barOptions} data={barData} />\n      </Col>\n      <Col sm={24} md={8}>\n        <Doughnut options={pieOptions} data={pieData} />\n      </Col>\n    </Row>\n  );\n};\nexport default memo(AdditionalCharts);\n","import React, { memo } from \"react\";\nimport { AgGridReact } from \"ag-grid-react\";\nimport \"ag-grid-community/dist/styles/ag-grid.css\";\nimport \"ag-grid-community/dist/styles/ag-theme-balham.css\";\nimport { debounce } from \"throttle-debounce\";\n\nconst AgGrid = ({ tableData, selectBrand }) => {\n  const onSelectionChanged = params => {\n    var selectedRows = params.api.getSelectedRows();\n    const { brand } = selectedRows[0];\n    selectBrand(brand);\n  };\n\n  const onGridReady = params => {\n    params.api.sizeColumnsToFit();\n  };\n\n  const onResize = debounce(300, params => {\n    params.api.sizeColumnsToFit();\n  });\n\n  return (\n    <div className=\"ag-theme-balham\" style={{ height: \"100%\", width: \"100%\" }}>\n      <AgGridReact\n        columnDefs={tableData.columnDefs}\n        rowData={tableData.rowData}\n        defaultColDef={{\n          sortable: true,\n          resizable: true\n        }}\n        rowSelection=\"single\"\n        onSelectionChanged={onSelectionChanged}\n        onGridReady={onGridReady}\n        onGridSizeChanged={onResize}\n      ></AgGridReact>\n    </div>\n  );\n};\n\nexport default memo(AgGrid);\n","/* eslint-disable react/jsx-key */\nimport React, { memo } from \"react\";\nimport { useTable, useSortBy } from \"react-table\";\nimport styled from \"styled-components\";\n\nfunction Table({ columns, data, onRowClick }) {\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    rows,\n    prepareRow\n  } = useTable(\n    {\n      columns,\n      data\n    },\n    useSortBy\n  );\n\n  // We don't want to render all 2000 rows for this example, so cap\n  // it at 20 for this use case\n  const firstPageRows = rows.slice(0, 20);\n\n  return (\n    <>\n      <table {...getTableProps()}>\n        <thead>\n          {headerGroups.map(headerGroup => (\n            <tr {...headerGroup.getHeaderGroupProps()}>\n              {headerGroup.headers.map(column => (\n                // Add the sorting props to control sorting. For this example\n                // we can add them into the header props\n                <th {...column.getHeaderProps(column.getSortByToggleProps())}>\n                  {column.render(\"Header\")}\n                  {/* Add a sort direction indicator */}\n                  <span>\n                    {column.isSorted\n                      ? column.isSortedDesc\n                        ? \" 🔽\"\n                        : \" 🔼\"\n                      : \"\"}\n                  </span>\n                </th>\n              ))}\n            </tr>\n          ))}\n        </thead>\n        <tbody {...getTableBodyProps()}>\n          {firstPageRows.map(row => {\n            prepareRow(row);\n            return (\n              <tr {...row.getRowProps()} onClick={() => onRowClick(row)}>\n                {row.cells.map(cell => {\n                  return (\n                    <td {...cell.getCellProps()}>{cell.render(\"Cell\")}</td>\n                  );\n                })}\n              </tr>\n            );\n          })}\n        </tbody>\n      </table>\n    </>\n  );\n}\n\nconst ReactTableComponent = ({ tableData: { columns, data }, selectBrand }) => {\n  const onRowClick = row => {\n    const { brand } = row.values;\n    selectBrand(brand);\n  };\n  return (\n    <Styles>\n      <Table\n        data={data}\n        columns={columns}\n        showPagination={false}\n        showPageSizeOptions={false}\n        className=\"-striped -highlight\"\n        onRowClick={onRowClick}\n      />\n    </Styles>\n  );\n};\n\nexport default memo(ReactTableComponent);\n\nconst Styles = styled.div`\n  padding: 1rem;\n  overflow-y: auto;\n  height: 100%;\n  width: 100%;\n\n  table {\n    border-spacing: 0;\n    border: 1px solid black;\n\n    tr {\n      cursor: pointer;\n      :last-child {\n        td {\n          border-bottom: 0;\n        }\n      }\n    }\n\n    th,\n    td {\n      margin: 0;\n      padding: 0.5rem;\n      border-bottom: 1px solid black;\n      border-right: 1px solid black;\n\n      :last-child {\n        border-right: 0;\n      }\n    }\n  }\n`;\n","import React, { memo } from \"react\";\nimport { Table } from \"antd\";\n\nconst AntdTable = ({\n  tableData: { columns, dataSource },\n  selectBrand,\n  selectedBrand\n}) => {\n  const onSelectionChanged = row => {\n    const { brand } = row;\n    selectBrand(brand);\n  };\n  return (\n    <div className=\"antd-grid-container\">\n      <Table\n        columns={columns}\n        dataSource={dataSource}\n        tableLayout=\"auto\"\n        bordered\n        pagination={false}\n        size=\"middle\"\n        rowSelection={{\n          onSelect: onSelectionChanged,\n          type: \"radio\",\n          selectedRowKeys: [selectedBrand]\n        }}\n      />\n    </div>\n  );\n};\n\nexport default memo(AntdTable);\n","import React, { memo } from \"react\";\nimport { prepareTable } from \"../../dataHelpers\";\nimport AgGrid from \"./AgGrid\";\nimport ReactTableComponent from \"./ReactTableComponent\";\nimport AntdTable from \"./AntdTable\";\n\nconst Tables = ({\n  data,\n  tableType,\n  kpiPrimary,\n  selectBrand,\n  selectedBrand\n}) => {\n  const tableData = prepareTable(data, tableType, kpiPrimary);\n\n  if (tableType === \"ag\") {\n    return <AgGrid tableData={tableData} selectBrand={selectBrand} />;\n  } else if (tableType === \"reacttable\") {\n    return (\n      <ReactTableComponent tableData={tableData} selectBrand={selectBrand} />\n    );\n  } else {\n    return (\n      <AntdTable\n        tableData={tableData}\n        selectBrand={selectBrand}\n        selectedBrand={selectedBrand}\n      />\n    );\n  }\n};\n\nexport default memo(Tables);\n","import React, { useState, useEffect } from \"react\";\nimport BarChart from \"./components/BarChart\";\nimport { fetchBarChartData, fetchLineChartData } from \"./chartHelpers\";\nimport LineChart from \"./components/LineChart\";\nimport ControlPanel from \"./components/ControlPanel\";\nimport AdditionalCharts from \"./components/AdditionalCharts\";\nimport Tables from \"./components/tables\";\n\nconst initialChartSettings = {\n  yearPrimary: \"2019\",\n  kpiPrimary: \"sales\",\n  kpiAdditional: \"revenue\",\n  showAdditional: false\n};\n\nexport const MainChart = ({ cars }) => {\n  const defaultBrand = cars?.[0]?.brand ?? \"Toyota\";\n  const [blockMode, setBlockMode] = useState(\"bar\");\n  const [chartSettings, setCharsSettings] = useState(initialChartSettings);\n  const [chartData, setChartData] = useState(null);\n  const [additionalBrand, setAdditionalBrand] = useState(defaultBrand);\n  const [tableType, setTableType] = useState(\"ag\");\n\n  useEffect(() => {\n    const {\n      yearPrimary,\n      kpiPrimary,\n      kpiAdditional,\n      showAdditional\n    } = chartSettings;\n    const { barChartData, barChartOptions } = fetchBarChartData({\n      data: cars,\n      yearPrimary,\n      kpiPrimary,\n      kpiAdditional,\n      showAdditional\n    });\n    const { lineChartData, lineChartOptions } = fetchLineChartData({\n      data: cars,\n      yearPrimary,\n      kpiPrimary,\n      showAdditional\n    });\n    setChartData({\n      barChartOptions,\n      barChartData,\n      lineChartData,\n      lineChartOptions\n    });\n  }, [cars, chartSettings]);\n  if (!cars) return null;\n  const controlPanelProps = {\n    setBlockMode,\n    blockMode,\n    chartSettings,\n    setCharsSettings,\n    tableType,\n    setTableType\n  };\n  return (\n    <div className=\"main-chart\">\n      <ControlPanel {...controlPanelProps} />\n      <div\n        className=\"main-chart-container\"\n        style={blockMode === \"bar\" ? { cursor: \"pointer\" } : {}}\n      >\n        {chartData && blockMode === \"bar\" && (\n          <BarChart\n            data={chartData.barChartData}\n            options={chartData.barChartOptions}\n            selectBrand={setAdditionalBrand}\n          />\n        )}\n        {chartData && blockMode === \"line\" && (\n          <LineChart\n            data={chartData.lineChartData}\n            options={chartData.lineChartOptions}\n          />\n        )}\n        {blockMode === \"table\" && (\n          <Tables\n            data={cars}\n            tableType={tableType}\n            kpiPrimary={chartSettings.kpiPrimary}\n            selectBrand={setAdditionalBrand}\n            selectedBrand={additionalBrand}\n          />\n        )}\n      </div>\n      <AdditionalCharts\n        brand={additionalBrand}\n        yearPrimary={chartSettings.yearPrimary}\n      />\n    </div>\n  );\n};\n","import React, { useEffect, useContext, useCallback } from \"react\";\nimport { MainChart } from \"../MainChart\";\nimport { CarsApiContext } from \"../../context/carsApi/carsApiContext\";\n\nexport const MainChartBlock = () => {\n  const { getCarsData, carsApiState } = useContext(CarsApiContext);\n  const getData = useCallback(() => {\n    getCarsData();\n    //eslint-disable-next-line\n  }, []);\n  useEffect(() => {\n    getData();\n  }, [getData]);\n  // console.log(\"carsApiState: \", carsApiState);\n  return carsApiState.cars ? <MainChart cars={carsApiState.cars} /> : null;\n};\n","import React from \"react\";\nimport { Layout, Menu } from \"antd\";\n\nconst { Sider } = Layout;\n\n// eslint-disable-next-line no-undef\nconst publicImageFolder = process.env.PUBLIC_URL + \"/images\";\n\nexport const AntdSider = ({\n  collapsed,\n  setCollapsed,\n  children,\n  uiName,\n  setUI\n}) => {\n  const menuClickHandler = e => setUI(e.key);\n  return (\n    <Layout style={{ minHeight: \"100vh\", backgroundColor: \"#f2f2f2\" }}>\n      <Sider\n        collapsible\n        collapsed={collapsed}\n        onCollapse={setCollapsed}\n        className=\"antd-sider\"\n      >\n        <div className=\"logo\">Logo</div>\n        <Menu\n          theme=\"dark\"\n          mode=\"inline\"\n          selectedKeys={[uiName]}\n          onClick={menuClickHandler}\n        >\n          <Menu.Item\n            key=\"antd\"\n            icon={\n              <img\n                alt=\"\"\n                src={publicImageFolder + \"/antdLogo.png\"}\n                width={30}\n              />\n            }\n          >\n            Ant Design\n          </Menu.Item>\n          <Menu.Item\n            key=\"semantic\"\n            icon={\n              <img alt=\"\" src={publicImageFolder + \"/suiLogo.png\"} width={30} />\n            }\n          >\n            Semantic UI\n          </Menu.Item>\n          <Menu.Item\n            key=\"material\"\n            icon={\n              <img alt=\"\" src={publicImageFolder + \"/muiLogo.png\"} width={30} />\n            }\n          >\n            Material UI\n          </Menu.Item>\n          <Menu.Item\n            key=\"atlassian\"\n            icon={\n              <img\n                alt=\"\"\n                src={publicImageFolder + \"/atlassianKitLogo.png\"}\n                width={30}\n              />\n            }\n          >\n            Atlassian Kit\n          </Menu.Item>\n        </Menu>\n      </Sider>\n      {children}\n    </Layout>\n  );\n};\n","import React from \"react\";\nimport { Icon, Menu, Segment, Sidebar } from \"semantic-ui-react\";\n\n// eslint-disable-next-line no-undef\nconst publicImageFolder = process.env.PUBLIC_URL + \"/images\";\n\nexport const SemanticSidebar = ({\n  collapsed,\n  setCollapsed,\n  children,\n  uiName,\n  setUI\n}) => {\n  console.log(\"collapsed: \", collapsed);\n  return (\n    <Sidebar.Pushable as={Segment}>\n      <Sidebar\n        as={Menu}\n        icon=\"labeled\"\n        inverted\n        vertical\n        visible={!collapsed}\n        width=\"thin\"\n        className=\"sui-sidebar\"\n        animation=\"push\"\n        direction=\"left\"\n      >\n        <Menu.Item\n          as=\"a\"\n          onClick={() => setUI(\"antd\")}\n          active={uiName === \"antd\"}\n        >\n          <div className=\"sui-sider-menu-item\">\n            <img alt=\"\" src={publicImageFolder + \"/antdLogo.png\"} height={30} />\n            <div> Ant Design</div>\n          </div>\n        </Menu.Item>\n        <Menu.Item\n          as=\"a\"\n          onClick={() => setUI(\"semantic\")}\n          active={uiName === \"semantic\"}\n        >\n          <div className=\"sui-sider-menu-item\">\n            <img alt=\"\" src={publicImageFolder + \"/suiLogo.png\"} height={30} />\n            <div>Semantic UI</div>\n          </div>\n        </Menu.Item>\n        <Menu.Item\n          as=\"a\"\n          onClick={() => setUI(\"material\")}\n          active={uiName === \"material\"}\n        >\n          <div className=\"sui-sider-menu-item\">\n            <img alt=\"\" src={publicImageFolder + \"/muiLogo.png\"} height={30} />\n            <div>Material UI</div>\n          </div>\n        </Menu.Item>\n        <Menu.Item\n          as=\"a\"\n          onClick={() => setUI(\"atlassian\")}\n          active={uiName === \"atlassian\"}\n        >\n          <div className=\"sui-sider-menu-item\">\n            <img\n              alt=\"\"\n              src={publicImageFolder + \"/atlassianKitLogo.png\"}\n              height={30}\n            />\n            <div>Atlassian Kit</div>\n          </div>\n        </Menu.Item>\n      </Sidebar>\n\n      <Sidebar.Pusher>\n        <div\n          className=\"sui-sidebar-trigger\"\n          onClick={() => setCollapsed(!collapsed)}\n        >\n          <Icon name={collapsed ? \"indent\" : \"outdent\"} />\n        </div>\n        <Segment basic>{children}</Segment>\n      </Sidebar.Pusher>\n    </Sidebar.Pushable>\n  );\n};\n","import React from \"react\";\nimport clsx from \"clsx\";\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\nimport Drawer from \"@material-ui/core/Drawer\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport List from \"@material-ui/core/List\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Divider from \"@material-ui/core/Divider\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport ChevronLeftIcon from \"@material-ui/icons/ChevronLeft\";\nimport ChevronRightIcon from \"@material-ui/icons/ChevronRight\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\n\nconst drawerWidth = 240;\n// eslint-disable-next-line no-undef\nconst publicImageFolder = process.env.PUBLIC_URL + \"/images\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: \"flex\"\n  },\n  appBar: {\n    zIndex: theme.zIndex.drawer + 1,\n    transition: theme.transitions.create([\"width\", \"margin\"], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen\n    })\n  },\n  appBarShift: {\n    marginLeft: drawerWidth,\n    width: `calc(100% - ${drawerWidth}px)`,\n    transition: theme.transitions.create([\"width\", \"margin\"], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen\n    })\n  },\n  menuButton: {\n    marginRight: 36\n  },\n  hide: {\n    display: \"none\"\n  },\n  drawer: {\n    width: drawerWidth,\n    flexShrink: 0,\n    whiteSpace: \"nowrap\"\n  },\n  drawerOpen: {\n    width: drawerWidth,\n    transition: theme.transitions.create(\"width\", {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen\n    })\n  },\n  drawerClose: {\n    transition: theme.transitions.create(\"width\", {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen\n    }),\n    overflowX: \"hidden\",\n    width: theme.spacing(7) + 1,\n    [theme.breakpoints.up(\"sm\")]: {\n      width: theme.spacing(9) + 1\n    }\n  },\n  toolbar: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"flex-end\",\n    padding: theme.spacing(0, 1),\n    // necessary for content to be below app bar\n    ...theme.mixins.toolbar\n  },\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing(3)\n  }\n}));\n\nexport const MaterialDrawer = ({\n  collapsed,\n  setCollapsed,\n  children,\n  uiName,\n  setUI\n}) => {\n  const classes = useStyles();\n  const theme = useTheme();\n\n  const handleDrawerOpen = () => {\n    setCollapsed(false);\n  };\n\n  const handleDrawerClose = () => {\n    setCollapsed(true);\n  };\n\n  return (\n    <div className={classes.root}>\n      <CssBaseline />\n      <AppBar\n        position=\"fixed\"\n        className={clsx(classes.appBar, {\n          [classes.appBarShift]: !collapsed\n        })}\n      >\n        <Toolbar>\n          <IconButton\n            color=\"inherit\"\n            aria-label=\"open drawer\"\n            onClick={handleDrawerOpen}\n            edge=\"start\"\n            className={clsx(classes.menuButton, {\n              [classes.hide]: !collapsed\n            })}\n          >\n            <MenuIcon />\n          </IconButton>\n          <Typography variant=\"h6\" noWrap>\n            Material Appbar\n          </Typography>\n        </Toolbar>\n      </AppBar>\n      <Drawer\n        variant=\"permanent\"\n        className={clsx(classes.drawer, {\n          [classes.drawerOpen]: !collapsed,\n          [classes.drawerClose]: collapsed\n        })}\n        classes={{\n          paper: clsx({\n            [classes.drawerOpen]: !collapsed,\n            [classes.drawerClose]: collapsed\n          })\n        }}\n      >\n        <div className={classes.toolbar}>\n          <IconButton onClick={handleDrawerClose}>\n            {theme.direction === \"rtl\" ? (\n              <ChevronRightIcon />\n            ) : (\n              <ChevronLeftIcon />\n            )}\n          </IconButton>\n        </div>\n        <Divider />\n        <List>\n          <ListItem\n            button\n            key=\"antd\"\n            selected={uiName === \"antd\"}\n            onClick={() => setUI(\"antd\")}\n          >\n            <ListItemIcon>\n              <img\n                alt=\"\"\n                src={publicImageFolder + \"/antdLogo.png\"}\n                width={30}\n              />\n            </ListItemIcon>\n            <ListItemText primary=\"Ant Design\" />\n          </ListItem>\n          <ListItem\n            button\n            key=\"semantic\"\n            selected={uiName === \"semantic\"}\n            onClick={() => setUI(\"semantic\")}\n          >\n            <ListItemIcon>\n              <img alt=\"\" src={publicImageFolder + \"/suiLogo.png\"} width={30} />\n            </ListItemIcon>\n            <ListItemText primary=\"Semantic UI\" />\n          </ListItem>\n          <ListItem\n            button\n            key=\"material\"\n            selected={uiName === \"material\"}\n            onClick={() => setUI(\"material\")}\n          >\n            <ListItemIcon>\n              <img alt=\"\" src={publicImageFolder + \"/muiLogo.png\"} width={30} />\n            </ListItemIcon>\n            <ListItemText primary=\"Material UI\" />\n          </ListItem>\n          <ListItem\n            button\n            key=\"atlassian\"\n            selected={uiName === \"atlassian\"}\n            onClick={() => setUI(\"atlassian\")}\n          >\n            <ListItemIcon>\n              <img\n                alt=\"\"\n                src={publicImageFolder + \"/atlassianKitLogo.png\"}\n                width={30}\n              />\n            </ListItemIcon>\n            <ListItemText primary=\"Atlassian Kit\" />\n          </ListItem>\n        </List>\n        <Divider />\n      </Drawer>\n      <main className={classes.content}>\n        <div className={classes.toolbar} />\n        {children}\n      </main>\n    </div>\n  );\n};\n","import React from \"react\";\nimport Button from \"@atlaskit/button\";\nimport { MenuGroup, Section, ButtonItem } from \"@atlaskit/menu\";\nimport { colors } from \"@atlaskit/theme\";\nimport Drawer from \"@atlaskit/drawer\";\n// eslint-disable-next-line no-undef\nconst publicImageFolder = process.env.PUBLIC_URL + \"/images\";\n\nexport const AtlassianKitDrawer = ({\n  collapsed,\n  setCollapsed,\n  children,\n  uiName,\n  setUI\n}) => {\n  console.log(\"collapsed: \", collapsed);\n  return (\n    <div css={{ padding: \"2rem\" }}>\n      <Drawer\n        onClose={() => setCollapsed(true)}\n        isOpen={!collapsed}\n        width=\"narrow\"\n      >\n        <div\n          style={{\n            color: colors.N800,\n            border: `1px solid ${colors.N40}`,\n            boxShadow:\n              \"0px 4px 8px rgba(9, 30, 66, 0.25), 0px 0px 1px rgba(9, 30, 66, 0.31)\",\n            borderRadius: 4,\n            maxWidth: 320,\n            margin: \"16px auto\"\n          }}\n        >\n          <MenuGroup>\n            <ButtonItem\n              onClick={() => setUI(\"antd\")}\n              isSelected={uiName === \"antd\"}\n              iconBefore={\n                <img\n                  alt=\"\"\n                  src={publicImageFolder + \"/antdLogo.png\"}\n                  height={30}\n                />\n              }\n            >\n              Ant Design\n            </ButtonItem>\n            <ButtonItem\n              onClick={() => setUI(\"semantic\")}\n              isSelected={uiName === \"semantic\"}\n              iconBefore={\n                <img\n                  alt=\"\"\n                  src={publicImageFolder + \"/suiLogo.png\"}\n                  height={30}\n                />\n              }\n            >\n              Semantic UI\n            </ButtonItem>\n            <ButtonItem\n              onClick={() => setUI(\"material\")}\n              isSelected={uiName === \"material\"}\n              iconBefore={\n                <img\n                  alt=\"\"\n                  src={publicImageFolder + \"/muiLogo.png\"}\n                  height={30}\n                />\n              }\n            >\n              Material UI\n            </ButtonItem>\n            <ButtonItem\n              onClick={() => setUI(\"atlassian\")}\n              isSelected={uiName === \"atlassian\"}\n              iconBefore={\n                <img\n                  alt=\"\"\n                  src={publicImageFolder + \"/atlassianKitLogo.png\"}\n                  height={30}\n                />\n              }\n            >\n              Atlassian Kit\n            </ButtonItem>\n          </MenuGroup>\n        </div>\n      </Drawer>\n      {children}\n    </div>\n  );\n};\n","import React from \"react\";\nimport { AntdSider } from \"./AntdSider\";\nimport { SemanticSidebar } from \"./SemanticSidebar\";\nimport { MaterialDrawer } from \"./MaterialDrawer\";\nimport { AtlassianKitDrawer } from \"./AtlassianKitDrawer\";\n\nexport const UISider = props => {\n  const antdSider = <AntdSider {...props}>{props.children}</AntdSider>;\n  switch (props.uiName) {\n    case \"antd\":\n      return antdSider;\n    case \"semantic\":\n      return <SemanticSidebar {...props}>{props.children}</SemanticSidebar>;\n    case \"material\":\n      return <MaterialDrawer {...props}>{props.children}</MaterialDrawer>;\n    case \"atlassian\":\n      return (\n        <AtlassianKitDrawer {...props}>{props.children}</AtlassianKitDrawer>\n      );\n\n    default:\n      return antdSider;\n  }\n};\n","import React, { useState, useContext } from \"react\";\nimport { MainChartBlock } from \"../MainChartBlock\";\nimport { UIContext } from \"../../context/ui/UIContext\";\nimport { UISider } from \"./UIs/UISider\";\n\nexport const RootApp = () => {\n  const [collapsed, setCollapsed] = useState(false);\n  const { setUI, uiName } = useContext(UIContext);\n\n  return (\n    <UISider\n      collapsed={collapsed}\n      setCollapsed={setCollapsed}\n      uiName={uiName}\n      setUI={setUI}\n    >\n      <div className=\"dashboard container\">\n        <MainChartBlock />\n      </div>\n    </UISider>\n  );\n};\n","import * as t from \"./actionTypes\";\n\nconst handlers = {\n  [t.GET_CARS_DATA]: (state, action) => ({\n    ...state,\n    cars: action.payload,\n    loading: false\n  }),\n  [t.SET_LOADING]: state => ({ ...state, loading: true }),\n  DEFAULT: state => state\n};\n\nexport const carsApiReducer = (state, action) => {\n  const handler = handlers[action.type] || handlers.DEFAULT;\n  return handler(state, action);\n};\n","export const GET_CARS_DATA = \"carsApi/GET_CARS_DATA\";\nexport const SET_LOADING = \"carsApi/SET_LOADING\";\n","import React, { useReducer } from \"react\";\nimport { CarsApiContext } from \"./carsApiContext\";\nimport { carsApiReducer } from \"./carsApiReducer\";\nimport * as t from \"./actionTypes\";\nimport axios from \"axios\";\n\nexport const CarsApiState = ({ children }) => {\n  const [state, dispatch] = useReducer(carsApiReducer, {});\n\n  const getCarsData = async () => {\n    setLoading();\n    try {\n      const response = await axios.get(\"cars.json\");\n      // console.log(\"response: \", response);\n      dispatch({ type: t.GET_CARS_DATA, payload: response.data });\n    } catch (error) {\n      console.error(\"GET DATA ERROR: \", error);\n    }\n  };\n\n  const setLoading = () => {\n    dispatch({ type: t.SET_LOADING });\n  };\n\n  return (\n    <CarsApiContext.Provider value={{ getCarsData, carsApiState: state }}>\n      {children}\n    </CarsApiContext.Provider>\n  );\n};\n","import * as t from \"./actionTypes\";\n\nconst handlers = {\n  [t.SET_UI]: (state, action) => ({\n    ...state,\n    uiName: action.payload\n  }),\n  DEFAULT: state => state\n};\n\nexport const uiReducer = (state, action) => {\n  const handler = handlers[action.type] || handlers.DEFAULT;\n  return handler(state, action);\n};\n","export const SET_UI = \"ui/SET_UI\";\n","import React, { useReducer } from \"react\";\nimport { UIContext } from \"./UIContext\";\nimport { uiReducer } from \"./uiReducer\";\nimport * as t from \"./actionTypes\";\n\nexport const UIState = ({ children }) => {\n  const [state, dispatch] = useReducer(uiReducer, { uiName: \"antd\" });\n\n  const setUI = key => {\n    console.log(\"UIState -> key\", key);\n    dispatch({ type: t.SET_UI, payload: key });\n  };\n\n  return (\n    <UIContext.Provider value={{ uiName: state.uiName, setUI }}>\n      {children}\n    </UIContext.Provider>\n  );\n};\n","import React from \"react\";\nimport \"./App.css\";\nimport { RootApp } from \"./views/RootApp\";\nimport \"antd/dist/antd.css\";\nimport { CarsApiState } from \"./context/carsApi/carsApiState\";\nimport { UIState } from \"./context/ui/uiState\";\n\nfunction App() {\n  return (\n    <UIState>\n      <CarsApiState>\n        <RootApp />\n      </CarsApiState>\n    </UIState>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.scss\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}